clone : 원격 저장소 복사 (git링크를 소스트리에 복사)

add : 스테이지 영역에 작업파일 추가

commit : 세이브, 현재 스테이지 영역의 파일을 저장(저장 시점을 만듬)

push : 원격 저장소에 업로드 (원래 자기 컴퓨터에만 적용됨)

checkout (코드뭉치 버리기) : 수정 사항 적용하지 않고 돌아가기


##브랜치란? 기존 내용을 유지 한 채 새로운 내용을 추가하는 것
checkout : 특정 브랜치(혹은 커밋)으로 돌아갈 떄 사용
[[소스트리에서는 특정 브랜치를 더블클릭함으로써 사용 가능]]

###병합하기 
-헤드 브랜치에 변경사항이 없고 병합 대상 브랜치가 헤드로부터 시작이라면
(쉽게 말해 한 줄로 분기점이 없는 구조를 가지면 충돌없이 fast-forward 병합)
-충돌이 발생한다면 충돌 파일에서 필요 내용을 남기고  commit한다.

##충돌
- 1. 수동으로 에디터로 편집
- 2. 소스코드) 우 클릭하여 병합해결
##commit 되돌리기

1. reset
- 소스코드) 특정 브랜치에서 우클릭 후 옵션 hard로 초기화
- 사용이 편리하지만 저장소에 저장되어있지 않다면 다 날라간다.
-강제 푸시가 발생한다. (commit시 오류 발생)

2. branch를 이용한 이전 시점으로 이동
-쉽지만 트리가 지저분해진다는 단점

3. revert
-가장 정석적
-충돌 발생 가능성 있다.


##rebase
-merge와 같이 두 브랜치를 합칠 때 사용
-현재 브랜치가 대상 브랜치 위로 올라간다.
-위험할 수 있으니 조심해서 사용
=======
##기타 주의사항
- . . . . .
